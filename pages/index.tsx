import type { NextPage, NextPageContext } from "next";
import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import { getLogs, Log } from "./api/logs";

const formatTimestamp = (d: Date) => {
  return `${d.toLocaleDateString("en-US")} ${d.toLocaleTimeString()}`;
};

import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import { AppContext } from "next/app";
dayjs.extend(relativeTime);

const Home = (props: { logs: Log[] }) => {
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <h1>OffHeart</h1>

      <p>
        Last update:{" "}
        {props.logs.length > 0
          ? dayjs(new Date(props.logs[props.logs.length - 1].timestamp)).format(
              "YYYY-MM-DD [at] h:mm a"
            ) +
            ` (${dayjs(
              new Date(props.logs[props.logs.length - 1].timestamp)
            ).fromNow()})`
          : "Never"}
      </p>

      <div>
        <table>
          <thead>
            <tr>
              <th className="timestamp-cell">Timestamp</th>
              <th>Download</th>
              <th>Upload</th>
            </tr>
          </thead>
          <tbody>
            {props.logs.map((log) => (
              <tr key={log.timestamp}>
                <td className="timestamp-cell">
                  {formatTimestamp(new Date(log.timestamp))}
                </td>
                <td>{log.speedDown}</td>
                <td>{log.speedUp}</td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>
  );
};

export default Home;

export async function getStaticProps(context: NextPageContext) {
  console.log("get static props!");
  const logs = await getLogs();
  console.log("got logs");
  return {
    props: {
      logs,
    },
  };
}
